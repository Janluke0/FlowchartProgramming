package ide;

import java.awt.EventQueue;
import java.awt.Font;
import java.util.Enumeration;

import javax.swing.AbstractListModel;
import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import javax.swing.plaf.FontUIResource;

import language.Piece;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kyran Adams
 */
@SuppressWarnings("serial")
public class WindowFrame extends JFrame {
	/**
	 * Creates new form GUIFrame
	 */
	public WindowFrame() {
		setUIFont(new FontUIResource(GraphicsConstants.APP_FONT));
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jSplitPane1 = new JSplitPane();
		piecePickerPanel = new JPanel();
		jScrollPane1 = new JScrollPane();
		pieceList = new JList<>();
		mainAndToolbarSeperator = new JSplitPane();
		toolbarPanel = new ToolbarPanel();
		setMainPanel(new MainPanel());

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		jSplitPane1.setDividerSize(0);

		pieceList.setModel(new AbstractListModel<String>() {

			@Override
			public int getSize() {
				return Piece.values().size();
			}

			@Override
			public String getElementAt(final int i) {
				return Piece.getPieceNames().get(i);
			}
		});
		jScrollPane1.setViewportView(pieceList);

		final GroupLayout piecePickerPanelLayout = new GroupLayout(piecePickerPanel);
		piecePickerPanel.setLayout(piecePickerPanelLayout);

		final int maxPixelWidthOfPieceNames = (int) (getMainPanel().getFontMetrics(GraphicsConstants.APP_FONT).stringWidth(Piece.MAX_LENGTH_STRING) * 1.5);

		piecePickerPanelLayout.setHorizontalGroup(piecePickerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, maxPixelWidthOfPieceNames, Short.MAX_VALUE));
		piecePickerPanelLayout.setVerticalGroup(piecePickerPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE));

		jSplitPane1.setLeftComponent(piecePickerPanel);

		mainAndToolbarSeperator.setDividerLocation(40);
		mainAndToolbarSeperator.setDividerSize(0);
		mainAndToolbarSeperator.setOrientation(JSplitPane.VERTICAL_SPLIT);

		final GroupLayout toolbarPanelLayout = new GroupLayout(toolbarPanel);
		toolbarPanel.setLayout(toolbarPanelLayout);
		toolbarPanelLayout.setHorizontalGroup(toolbarPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 454, Short.MAX_VALUE));
		toolbarPanelLayout.setVerticalGroup(toolbarPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 39, Short.MAX_VALUE));

		mainAndToolbarSeperator.setTopComponent(toolbarPanel);

		final GroupLayout mainPanelLayout = new GroupLayout(getMainPanel());
		getMainPanel().setLayout(mainPanelLayout);
		mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 454, Short.MAX_VALUE));
		mainPanelLayout.setVerticalGroup(mainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGap(0, 472, Short.MAX_VALUE));

		mainAndToolbarSeperator.setRightComponent(getMainPanel());

		jSplitPane1.setRightComponent(mainAndToolbarSeperator);

		final GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(jSplitPane1));
		layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(jSplitPane1));

		pack();

		getMainPanel().centerOnOrigin();
	}

	public static void setUIFont(final FontUIResource f) {
		final Enumeration keys = UIManager.getDefaults().keys();
		while (keys.hasMoreElements()) {
			final Object key = keys.nextElement();
			final Object value = UIManager.get(key);
			if (value instanceof FontUIResource) {
				final FontUIResource orig = (FontUIResource) value;
				final Font font = new Font(f.getFontName(), orig.getStyle(), f.getSize());
				UIManager.put(key, new FontUIResource(font));
			}
		}
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(final String args[]) {

		try {
			for (final UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (final ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(WindowFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final InstantiationException ex) {
			java.util.logging.Logger.getLogger(WindowFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(WindowFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(WindowFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		/* Create and display the form */
		EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				final WindowFrame frame = new WindowFrame();
				frame.setVisible(true);

			}
		});
	}

	public MainPanel getMainPanel() {
		return mainPanel;
	}

	public void setMainPanel(final MainPanel mainPanel) {
		this.mainPanel = mainPanel;
	}

	// Variables declaration - do not modify
	private JScrollPane jScrollPane1;
	private JSplitPane jSplitPane1;
	private JSplitPane mainAndToolbarSeperator;
	private MainPanel mainPanel;
	private JList<String> pieceList;
	private JPanel piecePickerPanel;
	private JPanel toolbarPanel;
	// End of variables declaration
}
